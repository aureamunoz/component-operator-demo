version: 2.1

executors:
  k8s-executor:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    environment:
      KUBE_VERSION: v1.14.0
      MINIKUBE_HOME: $HOME
      KUBECONFIG: $HOME/.kube/config

jobs:
  k8s-setup-start:
    executor: k8s-executor
    steps:
    #- run:
    #    name: Install kubectl and minikube
    #    command: |
    #      curl -LO https://storage.googleapis.com/kubernetes-release/release/${KUBE_VERSION}/bin/linux/amd64/kubectl
    #      chmod +x ./kubectl && sudo mv ./kubectl /usr/local/bin/kubectl
    #
    #      curl -L https://git.io/get_helm.sh | bash
    #
    #      curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    #      chmod +x minikube && sudo cp minikube /usr/local/bin && rm minikube
    #      mkdir -p "$HOME/.kube"
    #      mkdir -p "$HOME/.minikube"

    # Failing as we get
    # minikube is not running, so the service cannot be accessed
    # Exited with code 69
    #- run:
    #    name: Start minikube
    #    command: |
    #      minikube addons enable ingress
    #      minikube config set cpus 4
    #      minikube config set vm-driver none
    #      minikube config set kubernetes-version ${KUBE_VERSION}
    #      minikube start -v 6

    # Failing
    # E: Unable to locate package kubelet
    # E: Unable to locate package kubeadm
    # E: Unable to locate package kubectl
    # Exited with code 100
    # - run:
    #    name: Install kubelet, kubectl, kubeadmin
    #    command: |
    #      sudo apt-get install -y apt-transport-https
    #      curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    #      sudo tee -a /etc/apt/sources.list.d/kubernetes.list \<<EOF
    #      deb https://apt.kubernetes.io/ kubernetes-xenial main
    #      EOF
    #      sudo apt-get install -y kubelet kubeadm kubectl
    #      sudo apt-mark hold kubelet kubeadm kubectl
    # Failling
    # Failed to execute operation: No such file or directory
    # Exited with code 1
    #- run:
    #    name: TODO
    #    command: |
    #      CNI_VERSION="v0.6.0"
    #      sudo mkdir -p /opt/cni/bin
    #      curl -L "https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-amd64-${CNI_VERSION}.tgz" | sudo tar -C /opt/cni/bin -xz
#
    #      CRICTL_VERSION="v1.11.1"
    #      sudo mkdir -p /opt/bin
    #      curl -L "https://github.com/kubernetes-incubator/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-amd64.tar.gz" | sudo tar -C /opt/bin -xz
#
    #      RELEASE="$(curl -sSL https://dl.k8s.io/release/stable.txt)"
#
    #      cd /opt/bin
    #      sudo curl -L --remote-name-all https://storage.googleapis.com/kubernetes-release/release/${RELEASE}/bin/linux/amd64/{kubeadm,kubelet,kubectl}
    #      sudo chmod +x {kubeadm,kubelet,kubectl}
#
    #      sudo systemctl enable --now kubelet
    - run:
        name: Use microk8s
        command: |
          sudo snap install microk8s --classic

          # wait until a k8s node is ready
          sleep 10
          n=0
          until [ $n -ge 10 ]
          do
            (/snap/bin/microk8s.kubectl get no | grep -z "Ready") && break
            n=$[$n+1]
            sleep 20
          done
          echo "Kubernetes cluster launched"

          echo n |/snap/bin/microk8s.enable dns ingress registry storage

    - run:
        name: Initialize helm, install ServiceCatalog
        command: |
          helm init

workflows:
  version: 2.1
  test-component-operator-demo:
    jobs:
      - k8s-setup-start